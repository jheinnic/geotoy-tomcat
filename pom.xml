<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.questinygroup</groupId>
	<artifactId>geotoy</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Questiny GIS Toy Project</name>

	<packaging>pom</packaging>

	<organization>
		<name>Questiny Group</name>
		<url>http://questiny.com</url>
	</organization>
	<developers>
		<developer>
			<id></id>
			<name></name>
			<email></email>
		</developer>
	</developers>

	<scm>
		<url>https://github.com/jheinnic/geotoy-tomcat</url>
	</scm>
	<!-- <ciManagement> <system>Jenkins</system> <url/> </ciManagement> -->

	<modules>
		<module>poms/geotoy-bom</module>
		<module>poms/base-parent</module>
		<module>poms/java-parent</module>
		<module>poms/jar-parent</module>
		<module>poms/war-parent</module>
		<!-- Temporarily disabled until fixed <module>poms/ear-parent</module> -->
		<!-- <module>poms/spring-parent</module> <module>lib/common-utils</module> 
			<module>models/design-transport</module> <module>domains/exec-model</module> 
			<module>rest/sdk</module> <module>app/root-context</module> -->
		<module>models/esri-geometry</module>
		<module>models/sdk-domain</module>
		<module>models/design-domain</module>
		<module>models/publish-domain</module>
		<module>models/runtime-domain</module>
		<module>rest/resources-server</module>
		<module>apps/webui-war</module>
		<module>apps/graph-ws</module>
		<module>apps/gt-tutorial-swing</module>
		<!-- <module>app/geotoy-ear</module> <module>apps/sim-control</module> 
			<module>apps/wins-agent</module> -->
		<!-- Intermediate combinations of wars are also viable, but not yet defined. 
			For example, the design and report repositories could be combined, or the 
			design-repo might be combined with its more frequent consumer, the wins-manager. 
			The right approach will depend on how multi-node scalability and fault toleraance 
			are achieved, and also the observation that subunits that are installed in 
			the same container must scale up together by definition, and if two units 
			scale at the same rate, the only reason to develop them separately are non-functional 
			constraints, such as data access privilege levels. -->
		<!-- <module>ears/wins-unified</module> -->
		<!-- <module>installer</module> -->
	</modules>
</project>
